Doing:
  -- how to show devices
    --- scanned device duplicates
    --- remove connectedDevice in scanned devices (edit connectTo)
    --- prevent scannedDevices from showing connectedDevices (filter in scanning of devices)


Changes to test
  -- startDeviceScan: updated scanned devices and setting array to avoid duplicates. Condition that the device must be connectable
  -- connectToDevice: How to parse deviceDataForState. deleteScannedDevice removing a newly connected device from scannedDevices. 
  -- sendDataToBluetooth: new function that takes in deviceDataForState
  -- 

 
  -- enable connected devices
    --- make async thunk. 
  -- make sure it sends data
  -- configure persist
  -- device disconnect
  -- test background mode and persist behavior
  -- what data do I need in Connected Device? Depends on start and stop bluetooth coms, could just format data as what is needed for function. 

To-do:
Bluetooth Features
  -- user flow
  -- disconnectFromDevice (will force my state to be clean)
  -- need more sophistication once connecting to multiple devices
  -- filtering unneeded devices
  -- voluntary disconnect from phone
  -- automatic scanning (possibly pairing too)
  -- Why does button need to be pressed twice when device is connected, need to revisit connectToDevice.js (check function in renderScannedItems)
  -- copy app given by jiro

- New features
  -- file saving
  -- file sharing
  -- smoothing functions
  -- Send various types of data
  --- map and round number not working
  -- modes
  -- animation
  -- multi-device connect
  -- "hit the user on the head" UI Features

  - start/stop/save button
  - when BT is off globally
  - when no device is connected
  - when device is connected
  - when data is streaming
  - when phone loses connections
  - use blinking and pin modals to communicate

- Testing implemented features
  -- BT connect and displaying correct state (connected, loading, etc.) Sometimes needs to be pressed again.
  -- caching data
  -- background mode
  -- bluetooth

- Performance Improvements
  -- global BT state
- Error hnadling
  -- when phone BT turns off

- Microcontroller
  -- When phone disconnects
  -- Parsing data
  --

ST NOTES:
- action creators return the action type! Good to know 
- can get rid of device sort if no longer going to use one array. And why am I doing this? 
= Seems to be some options in PLX for working with saved data. Check out this bleManager function, how would it relate to state? Will prob find out its usefulness in testing. restoreStateFunction(restoredState)
- a lot is changing in my bluetooth, and im seeing a ton of clutter in connect to Device. Im just going to mop it all up and build back what's needed.
- May be able to get rid of updated scanned devices and just push, since redux is immutable anyway. Actually, it helps me keep out dupliocates. Need to pass hooks to function unfortunatley
- Dont try to fix bluetooth while doing state, stay focused on the prize.

- Just keep building. Fixing problems and making the code overall better, very good. Im pumped because once this is implemented, state should be super easy to handle and I can begin to work on adding more features on the TO DO list. YEEEEE
  https://redux.js.org/tutorials/fundamentals/part-8-modern-redux

  LT Notes:
