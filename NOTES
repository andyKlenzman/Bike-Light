Doing:
  - refactor for redux. 
  - understanding bluetooth. 

Next up: disconnectFromDevice (will force my state to be clean)
-- caching data
  - Understanding how to have data persist
  - understand when the device will disonccect 
    -- If the device goes into background mode, if it shuts off, if the app is closed what happens? 
      --- feeling here is that
      --- dont have a full understanding of background mode and how long connection will persist
    -- best course of action is to remove async storage and test and document the behavior


Bluetooth Overhaul
-- user flow


-- need more sophistication once connecting to multiple devices
-- filtering unneeded devices
-- voluntary disconnect from phone
-- automatic scanning (possibly pairing too)
-- global bluetooth state perforamnce
-- Why does button need to be pressed twice when device is connected, need to revisit connectToDevice.js
-- copy app given by jiro

To-do:

- New features
  -- file saving
  -- file sharing
  -- smoothing functions
  -- Send various types of data
  --- map and round number not working
  -- modes
  -- animation
  -- multi-device connect
  -- "hit the user on the head" UI Features

  - start/stop/save button
  - when BT is off globally
  - when no device is connected
  - when device is connected
  - when data is streaming
  - when phone loses connections
  - use blinking and pin modals to communicate

- Testing implemented features
  -- BT connect and displaying correct state (connected, loading, etc.) Sometimes needs to be pressed again.
  -- caching data
  -- background mode
  -- bluetooth

- Performance Improvements
  -- global BT state
- Error hnadling
  -- when phone BT turns off

- Microcontroller
  -- When phone disconnects
  -- Parsing data
  --

ST NOTES:
- I am running into state problems. This is why I need to use redux. I am tryuing to store data and keep app state consistent at the same time. 

LT Notes:
